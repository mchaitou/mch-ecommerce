{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","actions/productActions.js","components/Loader.js","components/Message.js","components/ProductCarousel.js","components/Paginate.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/OrderListScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","listProducts","listProductDetails","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Paginate","split","Pagination","Array","keys","active","HomeScreen","search","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","countInStock","xs","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","console","log","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","username","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","country","setCountry","city","setCity","postalCode","setPostalCode","saveShippingAddress","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","href","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","OrderListScreen","bordered","hover","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","App","path","component","exact","ProfileScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.51f2b692.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\r\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\r\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\r\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\r\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\";\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n","export const CART_ADD_ITEM = \"CART_ADD_ITEM\";\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\r\n\r\nexport const CART_CLEAR_ITEMS = \"CART_CLEAR_ITEMS\";\r\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\n\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\r\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\";\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\r\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\r\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\r\n\r\nexport const ORDER_CREATE_RESET = \"ORDER_CREATE_RESET\";\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n} from \"./reducers/productReducers\";\r\n\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport {\r\n  userReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  updateUserProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducers\";\r\n\r\nimport { \r\n        orderCreateReducer, \r\n        orderDetailsReducer, \r\n        orderPayReducer, \r\n        orderListMyReducer,\r\n        orderListReducer,\r\n        orderDeliverReducer,\r\n      } from \"./reducers/orderReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n\r\n  cart: cartReducer,\r\n  userLogin: userReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: updateUserProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage }\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n\r\n} from \"../constants/productConstants\";\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n  switch (action.type) {\r\n      case PRODUCT_DETAILS_REQUEST:\r\n          return { loading: true, ...state }\r\n\r\n      case PRODUCT_DETAILS_SUCCESS:\r\n          return { loading: false, product: action.payload }\r\n\r\n      case PRODUCT_DETAILS_FAIL:\r\n          return { loading: false, error: action.payload }\r\n\r\n      default:\r\n          return state\r\n  }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n      case PRODUCT_DELETE_REQUEST:\r\n          return { loading: true }\r\n\r\n      case PRODUCT_DELETE_SUCCESS:\r\n          return { loading: false, success: true }\r\n\r\n      case PRODUCT_DELETE_FAIL:\r\n          return { loading: false, error: action.payload }\r\n\r\n      default:\r\n          return state\r\n  }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n      case PRODUCT_CREATE_REQUEST:\r\n          return { loading: true }\r\n\r\n      case PRODUCT_CREATE_SUCCESS:\r\n          return { loading: false, success: true, product: action.payload }\r\n\r\n      case PRODUCT_CREATE_FAIL:\r\n          return { loading: false, error: action.payload }\r\n\r\n      case PRODUCT_CREATE_RESET:\r\n          return {}\r\n\r\n      default:\r\n          return state\r\n  }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n      case PRODUCT_UPDATE_REQUEST:\r\n          return { loading: true }\r\n\r\n      case PRODUCT_UPDATE_SUCCESS:\r\n          return { loading: false, success: true, product: action.payload }\r\n\r\n      case PRODUCT_UPDATE_FAIL:\r\n          return { loading: false, error: action.payload }\r\n\r\n      case PRODUCT_UPDATE_RESET:\r\n          return { product: {} }\r\n\r\n      default:\r\n          return state\r\n  }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n      case PRODUCT_CREATE_REVIEW_REQUEST:\r\n          return { loading: true }\r\n\r\n      case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n          return { loading: false, success: true, }\r\n\r\n      case PRODUCT_CREATE_REVIEW_FAIL:\r\n          return { loading: false, error: action.payload }\r\n\r\n      case PRODUCT_CREATE_REVIEW_RESET:\r\n          return {}\r\n\r\n      default:\r\n          return state\r\n  }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_CLEAR_ITEMS\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM: {\r\n      const item = action.payload; // the product object\r\n      // now check if the item is already in our cartItems array\r\n      // Note: product here is the product id\r\n      const existItem = state.cartItems.find(x => x.product === item.product);\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map(x =>\r\n            x.product === item.product ? item : x\r\n          )\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item]\r\n        };\r\n      }\r\n    }\r\n    case CART_REMOVE_ITEM: {\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n      };\r\n    }\r\n    case CART_SAVE_SHIPPING_ADDRESS: {\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload\r\n      };\r\n    }\r\n    case CART_SAVE_PAYMENT_METHOD: {\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload\r\n      };\r\n    }\r\n    case CART_CLEAR_ITEMS: {\r\n      return {\r\n        ...state,\r\n        cartItems: []\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET,\r\n\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const updateUserProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n      case USER_LIST_REQUEST:\r\n          return { loading: true }\r\n\r\n      case USER_LIST_SUCCESS:\r\n          return { loading: false, users: action.payload }\r\n\r\n      case USER_LIST_FAIL:\r\n          return { loading: false, error: action.payload }\r\n\r\n      case USER_LIST_RESET:\r\n          return { users: [] }\r\n\r\n      default:\r\n          return state\r\n  }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n      case USER_DELETE_REQUEST:\r\n          return { loading: true }\r\n\r\n      case USER_DELETE_SUCCESS:\r\n          return { loading: false, success: true }\r\n\r\n      case USER_DELETE_FAIL:\r\n          return { loading: false, error: action.payload }\r\n\r\n      default:\r\n          return state\r\n  }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n      case USER_UPDATE_REQUEST:\r\n          return { loading: true }\r\n\r\n      case USER_UPDATE_SUCCESS:\r\n          return { loading: false, success: true }\r\n\r\n      case USER_UPDATE_FAIL:\r\n          return { loading: false, error: action.payload }\r\n\r\n      case USER_UPDATE_RESET:\r\n          return { user: {} }\r\n\r\n      default:\r\n          return state\r\n  }\r\n}","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_RESET,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_RESET,\r\n\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_RESET,\r\n\r\n} from \"../constants/orderConstants.js\";\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true\r\n      };\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload\r\n      };\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    case ORDER_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n  switch (action.type) {\r\n      case ORDER_DETAILS_REQUEST:\r\n          return {\r\n              ...state,\r\n              loading: true\r\n          }\r\n\r\n      case ORDER_DETAILS_SUCCESS:\r\n          return {\r\n              loading: false,\r\n              order: action.payload\r\n          }\r\n\r\n      case ORDER_DETAILS_FAIL:\r\n          return {\r\n              loading: false,\r\n              error: action.payload\r\n          }\r\n\r\n\r\n      default:\r\n          return state\r\n  }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n      case ORDER_PAY_REQUEST:\r\n          return {\r\n              loading: true\r\n          }\r\n\r\n      case ORDER_PAY_SUCCESS:\r\n          return {\r\n              loading: false,\r\n              success: true\r\n          }\r\n\r\n      case ORDER_PAY_FAIL:\r\n          return {\r\n              loading: false,\r\n              error: action.payload\r\n          }\r\n\r\n      case ORDER_PAY_RESET:\r\n          return {}\r\n\r\n      default:\r\n          return state\r\n  }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n      case ORDER_LIST_MY_REQUEST:\r\n          return {\r\n              loading: true\r\n          }\r\n\r\n      case ORDER_LIST_MY_SUCCESS:\r\n          return {\r\n              loading: false,\r\n              orders: action.payload\r\n          }\r\n\r\n      case ORDER_LIST_MY_FAIL:\r\n          return {\r\n              loading: false,\r\n              error: action.payload\r\n          }\r\n\r\n      case ORDER_LIST_MY_RESET:\r\n          return {\r\n              orders: []\r\n          }\r\n\r\n      default:\r\n          return state\r\n  }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n      case ORDER_LIST_REQUEST:\r\n          return {\r\n              loading: true\r\n          }\r\n\r\n      case ORDER_LIST_SUCCESS:\r\n          return {\r\n              loading: false,\r\n              orders: action.payload\r\n          }\r\n\r\n      case ORDER_LIST_FAIL:\r\n          return {\r\n              loading: false,\r\n              error: action.payload\r\n          }\r\n      default:\r\n          return state\r\n  }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import axios from \"axios\";\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n\r\n} from \"../constants/userConstants\";\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\"\r\n      }\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/users/login/\",\r\n      {\r\n        username: email,\r\n        password: password\r\n      },\r\n      config\r\n    );\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: ORDER_LIST_MY_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n};\r\n\r\nexport const register = (name, email, password) => async dispatch => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\"\r\n      }\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/users/register/\",\r\n      { name: name, email: email, password: password },\r\n      config\r\n    );\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n    //Login the user automatically (this will change the state of userLogin.userReducer)\r\n    // which is in turn used in Header.js to render the NavDropdown\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = id => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DETAILS_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = user => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n    const { data } = await axios.put(\r\n      `/api/users/profile/update/`,\r\n      user,\r\n      config\r\n    );\r\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\r\n    //Login the user automatically with the updated info (this will change the state of userLogin.userReducer)\r\n    // which is in turn used in Header.js to render the NavDropdown\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n      dispatch({\r\n          type: USER_LIST_REQUEST\r\n      })\r\n\r\n      const {\r\n          userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n          headers: {\r\n              'Content-type': 'application/json',\r\n              Authorization: `Bearer ${userInfo.token}`\r\n          }\r\n      }\r\n\r\n      const { data } = await axios.get(\r\n          `/api/users/`,\r\n          config\r\n      )\r\n\r\n      dispatch({\r\n          type: USER_LIST_SUCCESS,\r\n          payload: data\r\n      })\r\n\r\n\r\n  } catch (error) {\r\n      dispatch({\r\n          type: USER_LIST_FAIL,\r\n          payload: error.response && error.response.data.detail\r\n              ? error.response.data.detail\r\n              : error.message,\r\n      })\r\n  }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n      dispatch({\r\n          type: USER_DELETE_REQUEST\r\n      })\r\n\r\n      const {\r\n          userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n          headers: {\r\n              'Content-type': 'application/json',\r\n              Authorization: `Bearer ${userInfo.token}`\r\n          }\r\n      }\r\n\r\n      const { data } = await axios.delete(\r\n          `/api/users/delete/${id}/`,\r\n          config\r\n      )\r\n\r\n      dispatch({\r\n          type: USER_DELETE_SUCCESS,\r\n          payload: data\r\n      })\r\n\r\n\r\n  } catch (error) {\r\n      dispatch({\r\n          type: USER_DELETE_FAIL,\r\n          payload: error.response && error.response.data.detail\r\n              ? error.response.data.detail\r\n              : error.message,\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n      dispatch({\r\n          type: USER_UPDATE_REQUEST\r\n      })\r\n\r\n      const {\r\n          userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n          headers: {\r\n              'Content-type': 'application/json',\r\n              Authorization: `Bearer ${userInfo.token}`\r\n          }\r\n      }\r\n\r\n      const { data } = await axios.put(\r\n          `/api/users/update/${user._id}/`,\r\n          user,\r\n          config\r\n      )\r\n\r\n      dispatch({\r\n          type: USER_UPDATE_SUCCESS,\r\n      })\r\n\r\n      dispatch({\r\n          type: USER_DETAILS_SUCCESS,\r\n          payload: data\r\n      })\r\n\r\n\r\n  } catch (error) {\r\n      dispatch({\r\n          type: USER_UPDATE_FAIL,\r\n          payload: error.response && error.response.data.detail\r\n              ? error.response.data.detail\r\n              : error.message,\r\n      })\r\n  }\r\n}","import React from \"react\";\r\nimport { Navbar, Nav, Container, Col, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from \"../actions/userActions\";\r\n\r\nfunction Header() {\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand> MCH ecommerce</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <SearchBox />\r\n            <Nav className=\"ml-auto\">\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-shopping-cart\"></i>Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id=\"username\">\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link>\r\n                    <i className=\"fas fa-user\"></i>Login\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n\r\n                  {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenue'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                    \r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n                  )}\r\n\r\n\r\n\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center py-3\"> Copyright &copy; Mchaitou</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nfunction Rating({ value, text, color }) {\r\n  return (\r\n    <div className=\"rating\">\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? \"fas fa-star\"\r\n              : value >= 0.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? \"fas fa-star\"\r\n              : value >= 1.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? \"fas fa-star\"\r\n              : value >= 2.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? \"fas fa-star\"\r\n              : value >= 3.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? \"fas fa-star\"\r\n              : value >= 4.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span> {text && text}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rating;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Rating from \"./Rating\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction Product({ product }) {\r\n  return (\r\n    <Card className=\"my-3 p-3 rounded\">\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} />\r\n      </Link>\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as=\"div\">\r\n            <strong> {product.name} </strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as=\"div\">\r\n          <div className=\"my-3\">\r\n            <Rating\r\n              value={product.rating}\r\n              text={`${product.numReviews} reviews`}\r\n              color=\"#f8e825\"\r\n            ></Rating>\r\n          </div>\r\n        </Card.Text>\r\n        <Card.Text as=\"h3\">${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const listProducts = (keyword = '') => async dispatch => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    const { data } = await axios.get(`/api/products${keyword}`);\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductDetails = id => async dispatch => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n      dispatch({\r\n          type: PRODUCT_DELETE_REQUEST\r\n      })\r\n\r\n      const {\r\n          userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n          headers: {\r\n              'Content-type': 'application/json',\r\n              Authorization: `Bearer ${userInfo.token}`\r\n          }\r\n      }\r\n\r\n      const { data } = await axios.delete(\r\n          `/api/products/delete/${id}/`,\r\n          config\r\n      )\r\n\r\n      dispatch({\r\n          type: PRODUCT_DELETE_SUCCESS,\r\n      })\r\n\r\n\r\n  } catch (error) {\r\n      dispatch({\r\n          type: PRODUCT_DELETE_FAIL,\r\n          payload: error.response && error.response.data.detail\r\n              ? error.response.data.detail\r\n              : error.message,\r\n      })\r\n  }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n      dispatch({\r\n          type: PRODUCT_CREATE_REQUEST\r\n      })\r\n\r\n      const {\r\n          userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n          headers: {\r\n              'Content-type': 'application/json',\r\n              Authorization: `Bearer ${userInfo.token}`\r\n          }\r\n      }\r\n\r\n      const { data } = await axios.post(\r\n          `/api/products/create/`,\r\n          {},\r\n          config\r\n      )\r\n      dispatch({\r\n          type: PRODUCT_CREATE_SUCCESS,\r\n          payload: data,\r\n      })\r\n\r\n\r\n  } catch (error) {\r\n      dispatch({\r\n          type: PRODUCT_CREATE_FAIL,\r\n          payload: error.response && error.response.data.detail\r\n              ? error.response.data.detail\r\n              : error.message,\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n      dispatch({\r\n          type: PRODUCT_UPDATE_REQUEST\r\n      })\r\n\r\n      const {\r\n          userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n          headers: {\r\n              'Content-type': 'application/json',\r\n              Authorization: `Bearer ${userInfo.token}`\r\n          }\r\n      }\r\n\r\n      const { data } = await axios.put(\r\n          `/api/products/update/${product._id}/`,\r\n          product,\r\n          config\r\n      )\r\n      dispatch({\r\n          type: PRODUCT_UPDATE_SUCCESS,\r\n          payload: data,\r\n      })\r\n\r\n\r\n      dispatch({\r\n          type: PRODUCT_DETAILS_SUCCESS,\r\n          payload: data\r\n      })\r\n\r\n\r\n  } catch (error) {\r\n      dispatch({\r\n          type: PRODUCT_UPDATE_FAIL,\r\n          payload: error.response && error.response.data.detail\r\n              ? error.response.data.detail\r\n              : error.message,\r\n      })\r\n  }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nfunction Loader() {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      role=\"status\"\r\n      style={{\r\n        height: \"100px\",\r\n        width: \"100px\",\r\n        margin: \"auto\",\r\n        display: \"block\"\r\n      }}\r\n    >\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nfunction Message({ variant, children }) {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n}\r\n\r\nexport default Message;\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.name} (${product.price})</h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n    //console.log('KEYWORD:',keyword);\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport { listProducts } from \"../actions/productActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Paginate from '../components/Paginate'\r\n\r\nfunction HomeScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector(state => state.productList);\r\n  const { error, loading, products,page, pages  } = productList;\r\n\r\n  let keyword = history.location.search\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword));\r\n  }, [dispatch, keyword]);\r\n\r\n  return (\r\n    <div>\r\n      {!keyword && <ProductCarousel />}\r\n      <h1> Latest products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <div>\r\n        \r\n          <Row>\r\n            {products.map(product => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate page={page} pages={pages} keyword={keyword} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Price: ${product.price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong>${product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className='btn-block'\r\n                                                    disabled={product.countInStock == 0}\r\n                                                    type='button'>\r\n                                                    Add to Cart\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProductScreen","import axios from \"axios\";\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty // qty:qty\r\n    }\r\n  });\r\n\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = id => (dispatch, getState) => {\r\n  dispatch({ type: CART_REMOVE_ITEM, payload: id });\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = address => dispatch => {\r\n  dispatch({ type: CART_SAVE_SHIPPING_ADDRESS, payload: address });\r\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(address));\r\n};\r\n\r\nexport const savePaymentMethod = data => dispatch => {\r\n  dispatch({ type: CART_SAVE_PAYMENT_METHOD, payload: data });\r\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Button,\r\n  Card,\r\n  Form\r\n} from \"react-bootstrap\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\nimport Message from \"../components/Message\";\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector(state => state.cart);\r\n  const { cartItems } = cart;\r\n  console.log(\"cartItems\", cartItems);\r\n  const productId = match.params.id;\r\n  // const qty = location.search\r\n  // const qty = location.search ? location.search.split(\"=\") : 1;\r\n  //  const qty = location.search ? location.search.split(\"=\")[1] : 1;\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n  // console.log(\"qty:\", qty);\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = id => {\r\n    // console.log(\"remove:\", id);\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h2>SHOPPING CART</h2>\r\n\r\n        {cartItems.length === 0 ? (\r\n          <Message variant=\"info\">\r\n            Your Cart is empty <Link to=\"/\">Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {cartItems.map(item => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}> {item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>{item.price}</Col>\r\n                  <Col md={3}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={e =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map(x => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={1}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items $\r\n                {cartItems\r\n                  .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                  .toFixed(2)}\r\n              </h2>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type=\"button\"\r\n                className=\"btn-block\"\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default CartScreen;\r\n","import { Container, Row, Col } from \"react-bootstrap\";\r\nimport React from \"react\";\r\n\r\nfunction FormContainer({ children }) {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default FormContainer;\r\n","import { Form, Row, Col, Button, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { login } from \"../actions/userActions\";\r\n\r\nfunction LoginScreen({ location, history }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n  useEffect(() => {\r\n    userInfo && history.push(redirect);\r\n  }, [dispatch, userInfo, redirect]);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {loading && <Loader />}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Sign in\r\n        </Button>\r\n        <Row>\r\n          <Col className=\"py-3\">\r\n            New customer ?\r\n            <Link to={redirect ? `register?redirect=${redirect}` : \"/register\"}>\r\n              Register\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n","import { Form, Row, Col, Button, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { register } from \"../actions/userActions\";\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector(state => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n  useEffect(() => {\r\n    userInfo && history.push(redirect);\r\n  }, [dispatch, userInfo, redirect]);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Register</h1>\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      {loading && <Loader />}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter Name\"\r\n            value={name}\r\n            onChange={e => setName(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"confirmPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Confirm password\"\r\n            value={confirmPassword}\r\n            onChange={e => setConfirmPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Register\r\n        </Button>\r\n        <Row>\r\n          <Col className=\"py-3\">\r\n            Already sign in ?\r\n            <Link to={redirect ? `login?redirect=${redirect}` : \"/login\"}>\r\n              Sign in\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\nimport { listMyOrders } from '../actions/orderActions';\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector(state => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdate = useSelector(state => state.userUpdateProfile);\r\n  const { success } = userUpdate;\r\n\r\n  const orderListMy = useSelector(state => state.orderListMy)\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else if (!user || !user.name || success || userInfo._id !== user._id) {\r\n      dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n      dispatch(getUserDetails(\"profile\"));\r\n      dispatch(listMyOrders())\r\n    } else {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n    }\r\n  }, [dispatch, userInfo, user, history, success]);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user._id,\r\n          name: name,\r\n          email: email,\r\n          password: password\r\n        })\r\n      );\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {loading && <Loader />}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              onChange={e => setName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={e => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={e => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm password\"\r\n              value={confirmPassword}\r\n              onChange={e => setConfirmPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2> My Orders</h2>\r\n\r\n        {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                            <Table striped responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Date</th>\r\n                                        <th>Total</th>\r\n                                        <th>Paid</th>\r\n                                        <th>Delivered</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {orders.map(order => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                                            <td>${order.totalPrice}</td>\r\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button className='btn-sm'>Details</Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )}\r\n\r\n\r\n\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import axios from \"axios\";\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_RESET,\r\n\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../constants/orderConstants.js\";\r\n\r\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\r\n\r\nexport const createOrder = order => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_CREATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n    const { data } = await axios.post(`/api/orders/add/`, order, config);\r\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data });\r\n    dispatch({ type: CART_CLEAR_ITEMS, payload: data });\r\n    localStorage.removeItem(\"cartItems\");\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n      dispatch({\r\n          type: ORDER_DETAILS_REQUEST\r\n      })\r\n\r\n      const {\r\n          userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n          headers: {\r\n              'Content-type': 'application/json',\r\n              Authorization: `Bearer ${userInfo.token}`\r\n          }\r\n      }\r\n\r\n      const { data } = await axios.get(\r\n          `/api/orders/${id}/`,\r\n          config\r\n      )\r\n\r\n      dispatch({\r\n          type: ORDER_DETAILS_SUCCESS,\r\n          payload: data\r\n      })\r\n\r\n\r\n  } catch (error) {\r\n      dispatch({\r\n          type: ORDER_DETAILS_FAIL,\r\n          payload: error.response && error.response.data.detail\r\n              ? error.response.data.detail\r\n              : error.message,\r\n      })\r\n  }\r\n}\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n  try {\r\n      dispatch({\r\n          type: ORDER_PAY_REQUEST\r\n      })\r\n\r\n      const {\r\n          userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n          headers: {\r\n              'Content-type': 'application/json',\r\n              Authorization: `Bearer ${userInfo.token}`\r\n          }\r\n      }\r\n\r\n      const { data } = await axios.put(\r\n          `/api/orders/${id}/pay/`,\r\n          paymentResult,\r\n          config\r\n      )\r\n\r\n      dispatch({\r\n          type: ORDER_PAY_SUCCESS,\r\n          payload: data\r\n      })\r\n\r\n\r\n  } catch (error) {\r\n      dispatch({\r\n          type: ORDER_PAY_FAIL,\r\n          payload: error.response && error.response.data.detail\r\n              ? error.response.data.detail\r\n              : error.message,\r\n      })\r\n  }\r\n} \r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n      dispatch({\r\n          type: ORDER_LIST_MY_REQUEST\r\n      })\r\n\r\n      const {\r\n          userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n          headers: {\r\n              'Content-type': 'application/json',\r\n              Authorization: `Bearer ${userInfo.token}`\r\n          }\r\n      }\r\n\r\n      const { data } = await axios.get(\r\n          `/api/orders/myorders/`,\r\n          config\r\n      )\r\n\r\n      dispatch({\r\n          type: ORDER_LIST_MY_SUCCESS,\r\n          payload: data\r\n      })\r\n\r\n\r\n  } catch (error) {\r\n      dispatch({\r\n          type: ORDER_LIST_MY_FAIL,\r\n          payload: error.response && error.response.data.detail\r\n              ? error.response.data.detail\r\n              : error.message,\r\n      })\r\n  }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n  return (\r\n    <Nav className=\"justify-content-center mb-4\">\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to=\"/login\">\r\n            <Nav.Link> Login</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled> Login</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to=\"/shipping\">\r\n            <Nav.Link> Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled> Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to=\"/payment\">\r\n            <Nav.Link> Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled> Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to=\"/placeorder\">\r\n            <Nav.Link> Place order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled> Place order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default CheckoutSteps;\r\n","import { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\nfunction ShippingScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n  const { shippingAddress } = useSelector(state => state.cart);\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      saveShippingAddress({\r\n        address,\r\n        city,\r\n        postalCode,\r\n        country\r\n      })\r\n    );\r\n    history.push(\"payment/\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping </h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Address\"\r\n            value={address ? address : \"\"}\r\n            onChange={e => setAddress(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter City\"\r\n            value={city ? city : \"\"}\r\n            onChange={e => setCity(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"postalCode\">\r\n          <Form.Label>Po Box</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter postal code\"\r\n            value={postalCode ? postalCode : \"\"}\r\n            onChange={e => setPostalCode(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"country\">\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Country\"\r\n            value={country ? country : \"\"}\r\n            onChange={e => setCountry(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default ShippingScreen;\r\n","import { Form, Button, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\nfunction PaymentScreen({ history }) {\r\n  const [paymentMethod, setPaymentMethod] = useState(\"paypal\");\r\n  const dispatch = useDispatch();\r\n  const { shippingAddress } = useSelector(state => state.cart);\r\n  if (!shippingAddress.address) {\r\n    history.push(\"/shipping\");\r\n  }\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push(\"/placeorder\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group>\r\n          <Form.Label as=\"legend\">Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"Paypal or Credit Card\"\r\n              id=\"paypal\"\r\n              name=\"paymentMethod\"\r\n              checked\r\n              onChange={e => {\r\n                setPaymentMethod(e.target.value);\r\n              }}\r\n            ></Form.Check>\r\n          </Col>\r\n        </Form.Group>\r\n        <Button type=\"submit\"> Continue </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default PaymentScreen;\r\n","import { Button, Col, Row, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector(state => state.cart);\r\n  const orderCreate = useSelector(state => state.orderCreate);\r\n  const { order, error, success } = orderCreate;\r\n\r\n  cart.itemsPrice = cart.cartItems\r\n    .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n    .toFixed(2);\r\n  cart.shippingPrice = cart.itemsPrice > 100 ? 0 : 10;\r\n  cart.taxPrice = Number(cart.itemsPrice * 0.082).toFixed(2);\r\n  cart.totalPrice =\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice);\r\n\r\n  if (!cart.paymentMethod) {\r\n    history.push(\"/payment\");\r\n  }\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n      dispatch({ type: ORDER_CREATE_RESET });\r\n    }\r\n  }, [success, history]);\r\n\r\n  const placeOrder = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h1> Shipping</h1>\r\n              <p>\r\n                <strong>Shipping:</strong> {cart.shippingAddress.address},{\" \"}\r\n                {cart.shippingAddress.city},{cart.shippingAddress.postalCode},{\" \"}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h1> Payment Method</h1>\r\n              <p>\r\n                <strong>Method:</strong> {cart.paymentMethod}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h1> Order Items</h1>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message variant=\"info\"> Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={item.product}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col>\r\n                          {item.qty}X ${item.price} = $\r\n                          {(item.qty * item.price).toFixed(2)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2> Order Summary</h2>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items:</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping:</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax:</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Toatl:</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartItems.length === 0}\r\n                  onClick={placeOrder}\r\n                >\r\n                  Place order\r\n                </Button>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item></ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n    //AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn\r\n\r\n\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AS5UEZ5dnKInBydSUz-w91NHxE5pje6PA6H0PM9JrQqK914OKdjJGEt56CtMEtGLjl2I_-RFCNJJ7JD4'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay|| order._id !== Number(orderId) || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n                <div>\r\n                    <h1>Order: {order._id}</h1>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Shipping</h2>\r\n                                    <p><strong>Name: </strong> {order.user.name}</p>\r\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Shipping: </strong>\r\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                        {'  '}\r\n                                        {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n                                    {order.isDelivered ? (\r\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Delivered</Message>\r\n                                        )}\r\n                                   \r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Payment Method</h2>\r\n                                    <p>\r\n                                        <strong>Method: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                    {order.isPaid ? (\r\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Paid</Message>\r\n                                        )}\r\n\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Items</h2>\r\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                        Order is empty\r\n                            </Message> : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={1}>\r\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col>\r\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Order Summary</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Items:</Col>\r\n                                            <Col>${order.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Shipping:</Col>\r\n                                            <Col>${order.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Tax:</Col>\r\n                                            <Col>${order.taxPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total:</Col>\r\n                                            <Col>${order.totalPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    \r\n                                    {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Loader />}\r\n\r\n                                            {!sdkReady ? (\r\n                                                <Loader />\r\n                                            ) : (\r\n                                                    <PayPalButton\r\n                                                        amount={order.totalPrice}\r\n                                                        onSuccess={successPaymentHandler}\r\n                                                    />\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n\r\n                                </ListGroup>\r\n                               \r\n                                  {loadingDeliver && <Loader />}\r\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                                \r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n}\r\n\r\nexport default OrderScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers,  deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n        console.log('DELETE:', id);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete,  userInfo])\r\n\r\n\r\n   \r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails,  updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n      \r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId,successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                \r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct,  createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page} = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, successDelete,  successCreate, createdProduct, userInfo, keyword])\r\n    \r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>PRICE</th>\r\n                                        <th>CATEGORY</th>\r\n                                        <th>BRAND</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {products.map(product => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>${product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct  } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n   \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n    \r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n\r\n      \r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n    }, [dispatch, product, productId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n   \r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                                \r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n                               \r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport { Container } from \"react-bootstrap\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from './screens/OrderScreen';\nimport OrderListScreen from './screens/OrderListScreen'\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\n\nfunction App() {\n  return (\n      <Router>\n        <Header />\n        <main className=\"py-3\">\n          <Container>\n            <Route path=\"/\" component={HomeScreen} exact />\n            <Route path=\"/product/:id\" component={ProductScreen} />\n            <Route path=\"/login\" component={LoginScreen} />\n            <Route path=\"/register\" component={RegisterScreen} />\n            <Route path=\"/profile\" component={ProfileScreen} />\n            <Route path=\"/shipping\" component={ShippingScreen} />\n            <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n            <Route path='/order/:id' component={OrderScreen} />\n            <Route path='/admin/orderlist' component={OrderListScreen} />\n            <Route path=\"/payment\" component={PaymentScreen} />\n            <Route path=\"/cart/:id?\" component={CartScreen} />\n\n            <Route path='/admin/userlist' component={UserListScreen} />\n            <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n            <Route path='/admin/productlist' component={ProductListScreen} />\n            <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n            \n          </Container>\n        </main>\n        <Footer />\n      </Router>\n    );\n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport \"./index.css\";\nimport \"./bootstrap.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}